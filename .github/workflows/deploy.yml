name: 'Deploy Proshop App'

on:
  push:
    branches:
      - feature/proshop-deployment
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: "us-east-1"
  ECR_REPOSITORY: "proshop-repo"
  ENVIRONMENT_STAGE: "dev"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Image
        env:
          IMAGE_TAG: latest
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: GitHubActionsRoleSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Plan with Terraform
        working-directory: ./terraform
        run: terraform plan -input=false -var-file=${{ env.ENVIRONMENT_STAGE }}.tfvars

      - name: Fetch secrets from AWS Secrets Manager
        id: secrets
        run: |
          secrets=$(aws secretsmanager get-secret-value --secret-id proshop-secret --query SecretString --output text)
          echo "::set-output name=secrets::$secrets"

      - name: Apply Cert-Manager resources
        run: kubectl apply -f cert-manager-resources.yaml

      # Uncomment the following step when ready to apply
      # - name: Apply with Terraform
      #   working-directory: ./terraform
      #   run: terraform apply -auto-approve -input=false -var-file=${{ env.ENVIRONMENT_STAGE }}.tfvars

      # Uncomment the following step when ready to destroy resources
      # - name: Destroy with Terraform
      #   working-directory: ./terraform
      #   run: terraform destroy -auto-approve -input=false -var-file=${{ env.ENVIRONMENT_STAGE }}.tfvars
